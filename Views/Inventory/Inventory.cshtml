@model List<Product>

@{
    ViewData["Title"] = "Inventory Management - Irish Beauty Products";
}

@* <div class="overflow-hidden" style="height: 100vh;">
  <div class="overflow-y-auto" style="max-height: 100vh; padding-bottom: 100px;"> *@
    <div class="container-fluid">
      <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Inventory Management</h1>

        <div>
            <button class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm mr-2" data-toggle="modal" data-target="#addProductModal">
                <i class="fas fa-plus fa-sm text-white-50"></i> Add New Product
            </button>

            <button class="btn btn-sm btn-warning shadow-sm" data-toggle="modal" data-target="#returnProductModal">
                <i class="fas fa-undo fa-sm text-white-50"></i> Return Product
            </button>
        </div>
    </div>

    <!-- Search bar for inventory -->
    <div class="mb-3 text-right">
        <input type="text" id="inventorySearch" class="form-control form-control-sm d-inline-block w-auto"
               placeholder="Search..." />
    </div>

    <!-- Inventory Table -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="inventoryTable" width="100%" cellspacing="0">
                    <thead class="thead-light">
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Expiry Date</th>
                            <th>Batch</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="inventoryTableBody">
                        @foreach (var product in Model)
                        {
                            <tr data-id="@product.Id">
                                <td>@product.Name</td>
                                <td>@product.Category</td>
                                <td>₱@product.Price.ToString("F2")</td>
                                <td>@product.QuantityOnHand</td>
                                <td>@(product.ExpiryDate?.ToString("MMM dd, yyyy") ?? "No expiry")</td>
                                <td>@(product.BatchNumber ?? "N/A")</td>
                                <td>
                                    @{
                                        if (product.ExpiryDate.HasValue && product.ExpiryDate < DateTime.Now)
                                        {
                                            <span class="badge badge-danger">Expired</span>
                                            ;
                                        }
                                        else if (product.QuantityOnHand <= 0)
                                        {
                                            <span class="badge badge-danger">Out of Stock</span>
                                            ;
                                        }
                                        else if (product.QuantityOnHand <= (product.LowStockAlert > 0 ? product.LowStockAlert : 5))
                                        {
                                            <span class="badge badge-warning">Low Stock</span>
                                            ;
                                        }
                                        else
                                        {
                                            <span class="badge badge-success">Good</span>
                                            ;
                                        }
                                    }
                                </td>


                                <td>
                                    <button class="btn btn-danger delete-product" data-id="@product.Id">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Return Product Modal -->
<div class="modal fade" id="returnProductModal" tabindex="-1" role="dialog" aria-labelledby="returnProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="returnProductModalLabel"><i class="fas fa-undo"></i> Return Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="returnProductForm">
                    <div class="form-group">
                        <label for="returnProductId">Select Product</label>
                        <select id="returnProductId" class="form-control" required>
                            <option value="">-- Select Product --</option>
                            @foreach (var item in Model)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="returnQuantity">Quantity Returned</label>
                        <input type="number" id="returnQuantity" class="form-control" min="1" required />
                    </div>

                    <div class="form-group">
                        <label for="returnReason">Reason for Return</label>
                        <textarea id="returnReason" class="form-control" rows="3" placeholder="Enter reason..." required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" id="submitReturn" class="btn btn-warning">Submit Return</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form id="addProductForm">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Product</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <!-- form fields -->
                    <div class="form-group">
                        <label>Name *</label>
                        <input type="text" id="Name" name="Name" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Category *</label>
                        <select class="form-control" id="Category" name="Category" required>
                            <option value="">Select Category</option>
                            <option>Skincare</option>
                            <option>Makeup</option>
                            <option>Hair Care</option>
                            <option>Fragrance</option>
                            <option>Bath & Body</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Price *</label>
                        <input type="number" id="Price" name="Price" class="form-control" step="0.01" required />
                    </div>
                    <div class="form-group">
                        <label>Cost *</label>
                        <input type="number" id="Cost" name="Cost" class="form-control" step="0.01" required />
                    </div>
                    <div class="form-group">
                        <label>Quantity *</label>
                        <input type="number" id="QuantityOnHand" name="QuantityOnHand" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>SKU *</label>
                        <input type="text" id="SKU" name="SKU" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Low Stock Alert</label>
                        <input type="number" id="LowStockAlert" name="LowStockAlert" class="form-control" value="5" />
                    </div>
                    <div class="form-group">
                        <label>Expiry Date</label>
                        <input type="date" id="ExpiryDate" name="ExpiryDate" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Batch Number</label>
                        <input type="text" id="BatchNumber" name="BatchNumber" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </div>
            </form>
        </div>
    </div>
</div>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {

            //  Function to get stock status badge
            function getStockStatus(quantity, lowStockAlert) {
                if (quantity <= 0) {
                    return `<span class="badge badge-danger">Out of Stock</span>`;
                } else if (quantity <= lowStockAlert) {
                    return `<span class="badge badge-warning">Low Stock</span>`;
                } else {
                    return `<span class="badge badge-success">Good</span>`;
                }
            }

           
            //  Add Product
          $("#addProductForm").submit(function (e) {
            e.preventDefault();

            let product = {
                Name: $("#Name").val(),
                Category: $("#Category").val(),
                Price: parseFloat($("#Price").val()),
                Cost: parseFloat($("#Cost").val()),
                QuantityOnHand: parseInt($("#QuantityOnHand").val()),
                SKU: $("#SKU").val(),
                LowStockAlert: parseInt($("#LowStockAlert").val()) || 5,
                ExpiryDate: $("#ExpiryDate").val() || null,
                BatchNumber: $("#BatchNumber").val() || null,
                SupplierId: null
            };

            $.ajax({
                url: '/Inventory/AddProduct',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(product),
                success: function (response) {
                    if (response.success) {
                        let p = response.product;
                        let stockBadge = getStockStatus(p.QuantityOnHand, p.LowStockAlert);

                        // Add new row to table
                        let newRow = `
                            <tr data-id="${p.Id}">
                                <td>${p.Name}</td>
                                <td>${p.Category}</td>
                                <td>₱${p.Price.toFixed(2)}</td>
                                <td>${p.QuantityOnHand}</td>
                                <td>${p.ExpiryDate ?? "No expiry"}</td>
                                <td>${p.BatchNumber ?? "N/A"}</td>
                                <td>${stockBadge}</td>
                                <td><button class="btn btn-danger delete-product" data-id="${p.Id}">Delete</button></td>
                            </tr>`;
                        $("#inventoryTableBody").append(newRow);

                        // optional: also add to POS display if it exists
                        let posContainer = document.getElementById("posProductList");
                        if (posContainer) {
                            let newCard = `
                                <div class="pos-product-card" data-id="${p.Id}">
                                    <h4>${p.Name}</h4>
                                    <p>${p.Category}</p>
                                    <p>₱${p.Price.toFixed(2)}</p>
                                    <button onclick="addToCart(${p.Id}, '${p.Name}', ${p.Price})">Add</button>
                                </div>`;
                            posContainer.insertAdjacentHTML("beforeend", newCard);
                        }

                        $("#addProductModal").modal("hide");
                        $("#addProductForm")[0].reset();

                        Swal.fire({
                            toast: true,
                            position: "top-end",
                            icon: "success",
                            title: "Inventory added successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true,
                            background: "#e9f7ef",
                            color: "#155724"
                        });
                    } else {
                       Swal.fire({
                        icon: "success",
                            title: "Inventory added successfully!",
                            showConfirmButton: false,
                           timer: 1500,
                          willClose: () => {
                            window.location.reload(); 
                          }
                       });

                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", xhr.responseText);
                    Swal.fire({
                        icon: "error",
                        title: "Error adding product",
                        text: error
                    });
                }
            }); 

        }); 


            // Delete Product 
            $(document).on('click', '.delete-product', function () {
                const productId = $(this).data('id');

                if (!confirm("Are you sure you want to delete this product?")) return;

                $.ajax({
                    url: '/Inventory/DeleteProduct',
                    type: 'POST',
                   data: { id: productId },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            $("tr[data-id='" + productId + "']").remove();
                            $(".pos-product-card[data-id='" + productId + "']").remove();
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });
            });

            
            $('#submitReturn').click(function () {
                const productId = $('#returnProductId').val();
                const quantity = $('#returnQuantity').val();
                const reason = $('#returnReason').val();

                if (!productId || !quantity || !reason) {
                    alert("Please fill in all fields.");
                    return;
                }

                $.ajax({
                    url: '/Inventory/ProcessReturn',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ ProductId: productId, QuantityReturned: quantity, Reason: reason }),
                    success: function (response) {
                        if (response.success) {
                            alert("Product return processed successfully!");
                            $('#returnProductModal').modal('hide');
                            location.reload();
                        } else {
                            alert("❌ " + response.message);
                        }
                    },
                    error: function () {
                        alert("❌ An error occurred while processing the return.");
                    }
                });
            });

           
            $("#inventorySearch").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#inventoryTableBody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

        });
    </script>
}
